name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=local-WebGoat -Dsonar.projectName='local-WebGoat'

#name: "Main / Pull requests build"
#on:
#    pull_request:
#        paths-ignore:
#            - '.txt'
#            - 'LICENSE'
#            - 'docs/**'
#        branches: [ main ]
#    push:
#        branches:
#            - main
#
#jobs:
#    pre-commit:
#        name: Pre-commit check
#        runs-on: ubuntu-latest
#        steps:
#            -   name: Checkout git repository
#                uses: actions/checkout@v4.1.6
#            -   name: Setup python
#                uses: actions/setup-python@v5
#                with:
#                    python-version: "3.9"
#            -   uses: actions/setup-java@v4
#                with:
#                    distribution: 'temurin'
#                    java-version: '21'
#            -   name: Pre-commit checks
#                uses: pre-commit/action@v3.0.1
#            -   name: pre-commit-ci-lite
#                uses: pre-commit-ci/lite-action@v1.1.0
#                if: always()
#    build:
#        runs-on: ${{ matrix.os }}
#        needs: [ pre-commit ]
#        strategy:
#            fail-fast: true
#            matrix:
#                os: [ windows-latest, ubuntu-latest, macos-13 ]
#            max-parallel: 1
#        steps:
#            -   uses: actions/checkout@v4.1.6
#            -   name: Set up JDK 21
#                uses: actions/setup-java@v4.2.1
#                with:
#                    distribution: 'temurin'
#                    java-version: 21
#                    architecture: x64
#                    cache: 'maven'
#            -   name: Build with Maven
#                run: mvn --no-transfer-progress verify
